generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  password         String?
  isActive         Boolean           @default(true)
  isVerified       Boolean           @default(false)
  roleId           Int
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  role             Role              @relation(fields: [roleId], references: [id])
  userDetail       UserDetail?       @relation("UserToUserDetail")
  userVerification UserVerification? @relation("UserToUserVerification")
}

model UserDetail {
  id                  Int           @id @default(autoincrement())
  userId              Int           @unique
  names               String?
  lastNames           String?
  phone               String?
  currentCityId       Int?
  address             String?
  birthDate           DateTime?
  documentTypeId      Int?
  documentNumber      String?       @unique
  profilePictureUrl   String?
  attachedDocumentUrl String?
  socialSecurityUrl   String?
  applicationCvUrl    String?
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  documentType        DocumentType? @relation(fields: [documentTypeId], references: [id])
  user                User          @relation("UserToUserDetail", fields: [userId], references: [id], onDelete: Cascade)
  coustPerHour        Int?

  assignments Assignment[] @relation("UserDetailAssignments")
}

model UserVerification {
  id                         Int       @id @default(autoincrement())
  userId                     Int       @unique
  verificationCode           String?
  verificationCodeExpiry     DateTime?
  tokenToResetPassword       String?
  tokenToResetPasswordExpiry DateTime?
  createdAt                  DateTime  @default(now())
  updatedAt                  DateTime  @updatedAt
  user                       User      @relation("UserToUserVerification", fields: [userId], references: [id], onDelete: Cascade)
}

model DocumentType {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userDetails UserDetail[]
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Assignment {
  id             Int          @id @default(autoincrement())
  title          String
  assignmentType Int
  costPerHour    Int          @default(0)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  users          UserDetail[] @relation("UserDetailAssignments")
}
